services:
  unifi:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi
    restart: unless-stopped
    environment:
      - PUID=3001
      - PGID=3000
      - TZ=Europe/Brussels
      - MONGO_DBNAME=unifi
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    env_file:
      - .env
    volumes:
      - ./config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    depends_on:
      - unifi-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.rule=Host(`unifi.internal.vandijck.xyz`)"
      - "traefik.http.routers.unifi.middlewares=secured@file"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"
    networks:
      - unifi
      - proxy

  unifi-db:
    user: "3001"
    image: docker.io/mongo:4.4
    container_name: unifi-db
    restart: unless-stopped
    volumes:
      - ./mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27017:27017
    networks:
      - unifi

networks:
  unifi:
  proxy:
    external: true
